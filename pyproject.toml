[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dht-toolkit"
version = "1.1.0"
description = "Development Helper Toolkit - A universal development automation tool"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Emasoft (Emanuele Sabetta)", email = "713559+Emasoft@users.noreply.github.com"},
]
maintainers = [
    {name = "Emasoft (Emanuele Sabetta)", email = "713559+Emasoft@users.noreply.github.com"},
]
keywords = ["development", "automation", "devops", "toolkit", "cli", "build-tool"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
    "Topic :: Utilities",
]
dependencies = [
    # Core dependencies
    "click>=8.1.0",
    "rich>=13.0.0",
    "prefect>=2.14.0",
    "prefect-shell>=0.2.0",
    "pyyaml>=6.0.0",
    "gitpython>=3.1.0",
    # UV package manager
    "uv>=0.5.0",
    # Tree-sitter for parsing
    "tree-sitter>=0.24.0",
    "tree-sitter-bash>=0.25.0",
    "tree-sitter-language-pack>=0.7.0",
    "tree-sitter-yaml>=0.7.0",
    # Utilities
    "tabulate>=0.9.0",
    "pathspec>=0.12.0",
    "packaging>=24.0",
    "tomli>=2.0.0;python_version<'3.11'",
    "typing-extensions>=4.0.0",
    "pexpect>=4.9.0",
    "psutil>=7.0.0",
    "bump-my-version>=1.1.0",
    "tomli-w>=1.2.0",
    # Additional dependencies found by deptry
    "colorama>=0.4.6",
    "distro>=1.9.0",
    "jsonschema>=4.23.0",
    "toml>=0.10.2",
    "pydantic>=2.10.0",
    "jinja2>=3.1.0",
    "docker>=7.1.0",  # For Docker API integration
    "requests>=2.32.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/dht"
Documentation = "https://github.com/yourusername/dht/wiki"
Repository = "https://github.com/yourusername/dht.git"
Issues = "https://github.com/yourusername/dht/issues"
Changelog = "https://github.com/yourusername/dht/blob/main/CHANGELOG.md"

[project.scripts]
dhtl = "DHT.dhtl:main"
dht = "DHT.dhtl:main"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=1.0.0",
]
lint = [
    "mypy>=1.0.0",
    "ruff>=0.11.0",
    "flake8>=7.0.0",
]
all = [
    "pytest>=8.0.0",
    "pytest-asyncio>=1.0.0",
    "mypy>=1.0.0",
    "ruff>=0.11.0",
    "flake8>=7.0.0",
]


[tool.ruff]
line-length = 120
target-version = "py310"
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    "tree-sitter-bash",
]

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I", "N", "UP", "C90"]
ignore = ["E501", "W505", "F841", "B008", "E402", "F404", "C901", "N999", "B018"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = false
check_untyped_defs = true
disable_error_code = ["misc"]
exclude = [
    "tree-sitter-bash",
    "build",
    "dist",
]

[[tool.mypy.overrides]]
module = "src.DHT.modules.flows.*"
disable_error_code = ["misc"]

[[tool.mypy.overrides]]
module = "src.DHT.modules.*"
disable_error_code = ["misc"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.venv
  | build
  | dist
  | tree-sitter-bash
)/
'''

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/tree-sitter-bash/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.hatch.build.targets.wheel]
packages = ["src/DHT"]
# Exclude unnecessary files from wheel
exclude = [
    "*.pyc",
    "__pycache__",
    ".DS_Store",
    "*.so",
    "*.dylib",
]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/pyproject.toml",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
    "/CONTRIBUTING.md",
    "/build-constraints.txt",
    "/.python-version",
    "/requirements*.txt",
]
exclude = [
    "*.pyc",
    "__pycache__",
    ".DS_Store",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "*.egg-info",
    "dist/",
    "build/",
]

[tool.deptry]
extend_exclude = [
    "tests",
    "docs",
    "build",
    "dist",
    ".venv",
    "venv",
    "__pycache__",
    ".git",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
    "node_modules",
    ".DS_Store",
    "tree-sitter-bash",
]
ignore = ["DEP001", "DEP002", "DEP003"]  # Ignore missing imports, unused deps, transitive deps

[tool.deptry.per_rule_ignores]
DEP002 = [
    "pytest", "pytest-asyncio", "mypy", "ruff", "flake8", "black", "pre-commit", "deptry",
    "bump-my-version", "uv",
    "prefect-shell", "tree-sitter-language-pack", "tree-sitter-yaml",
    "tabulate", "pathspec", "typing-extensions"
]

[tool.deptry.package_module_name_map]
gitpython = "git"
pyyaml = "yaml"
tree-sitter-languages = "tree_sitter_languages"
tree-sitter-bash = "tree_sitter_bash"
bump-my-version = "bumpversion"

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
    "types-pyyaml>=6.0.12.20250516",
    "types-tabulate>=0.9.0.20241207",
    "types-toml>=0.10.8.20240310",
    "deptry>=0.23.0",
    "pre-commit>=4.0.0",
    "yamllint>=1.37.0",
]

[tool.uv]
# Package indexes configuration
index-url = "https://pypi.org/simple"
extra-index-url = []

# Build configuration
compile-bytecode = true
upgrade = false

# Development settings
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "mypy>=1.0.0",
    "ruff>=0.11.0",
    "types-pyyaml>=6.0.12.20250516",
    "types-tabulate>=0.9.0.20241207",
    "types-toml>=0.10.8.20240310",
    "deptry>=0.23.0",
    "pre-commit>=4.0.0",
    "yamllint>=1.37.0",
]

# Package sources for specific dependencies
[tool.uv.sources]
# Example: tree-sitter-bash = { git = "https://github.com/tree-sitter/tree-sitter-bash" }

# Environment configuration
[tool.uv.pip]
index-strategy = "first-index"
keyring-provider = "subprocess"
no-build-isolation-package = []

[tool.uv.workspace]
members = [
    "test_tmp",
]

# Constraint environments for platform-specific builds
# This is specified as a list of environment markers
# [tool.uv.environments]
# default = ["sys_platform != 'win32'", "python_version >= '3.10'"]
