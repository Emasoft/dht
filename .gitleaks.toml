# Gitleaks configuration for DHT project
title = "DHT Gitleaks Config"

# Global allowlist
[allowlist]
description = "Global allowlist for DHT"

# Allowed email pattern - specifically for Emasoft
regexes = [
  '''713559\+Emasoft@users\.noreply\.github\.com''',
  '''POSTGRES_PASSWORD=postgres''',
  '''POSTGRES_USER=postgres''',
  '''POSTGRES_DB=app''',
  '''export \$secret=''',
  '''<CHANGE-ME-[^>]+>''',
  '''your-password''',
  '''your-email@gmail\.com''',
]

# Paths to exclude from scanning
paths = [
  # Virtual environments
  '''\.venv''',
  '''venv''',
  '''env''',

  # Python cache
  '''__pycache__''',
  '''\.pytest_cache''',
  '''\.mypy_cache''',
  '''\.ruff_cache''',

  # Build directories
  '''build''',
  '''dist''',
  '''\.egg-info''',

  # Node modules
  '''node_modules''',

  # Dependencies
  '''tree-sitter-bash''',

  # Lock files
  '''requirements\.txt''',
  '''requirements-dev\.txt''',
  '''uv\.lock''',
  '''package-lock\.json''',
  '''yarn\.lock''',
  '''pnpm-lock\.yaml''',

  # Test files and fixtures
  '''tests/''',
  '''test_.*\.py$''',
  '''.*_test\.py$''',
  '''tests/fixtures''',
  '''tests/data''',
  '''tests/integration/fixtures''',

  # Documentation
  '''DOCS_DEV''',
  '''docs''',
  '''.*\.md$''',

  # IDE
  '''\.idea''',
  '''\.vscode''',
]

# Custom rules for common secrets
[[rules]]
id = "aws-access-key"
description = "AWS Access Key"
regex = '''(?i)(aws[_\-\s]?)?access[_\-\s]?key[_\-\s]?(id)?[_\-\s]?[=:]\s*['\"]?([A-Z0-9]{20})['\"]?'''
tags = ["key", "AWS"]

[[rules]]
id = "aws-secret-key"
description = "AWS Secret Key"
regex = '''(?i)(aws[_\-\s]?)?secret[_\-\s]?access[_\-\s]?key[_\-\s]?[=:]\s*['\"]?([A-Za-z0-9/+=]{40})['\"]?'''
tags = ["key", "AWS"]

[[rules]]
id = "github-token"
description = "GitHub Personal Access Token"
regex = '''ghp_[0-9a-zA-Z]{36}'''
tags = ["key", "GitHub"]

[[rules]]
id = "github-oauth"
description = "GitHub OAuth Access Token"
regex = '''gho_[0-9a-zA-Z]{36}'''
tags = ["key", "GitHub"]

[[rules]]
id = "github-app-token"
description = "GitHub App Token"
regex = '''(ghu|ghs)_[0-9a-zA-Z]{36}'''
tags = ["key", "GitHub"]

[[rules]]
id = "github-refresh-token"
description = "GitHub Refresh Token"
regex = '''ghr_[0-9a-zA-Z]{36}'''
tags = ["key", "GitHub"]

[[rules]]
id = "gitlab-token"
description = "GitLab Personal Access Token"
regex = '''glpat-[0-9a-zA-Z\-\_]{20}'''
tags = ["key", "GitLab"]

[[rules]]
id = "openai-api-key"
description = "OpenAI API Key"
regex = '''sk-[a-zA-Z0-9]{20}T3BlbkFJ[a-zA-Z0-9]{20}'''
tags = ["key", "OpenAI"]

[[rules]]
id = "openai-api-key-new"
description = "OpenAI API Key (new format)"
regex = '''sk-proj-[a-zA-Z0-9]{48}'''
tags = ["key", "OpenAI"]

[[rules]]
id = "slack-token"
description = "Slack Token"
regex = '''xox[baprs]-([0-9a-zA-Z]{10,48})'''
tags = ["key", "Slack"]

[[rules]]
id = "stripe-api-key"
description = "Stripe API Key"
regex = '''(?i)stripe[_\-\s]?api[_\-\s]?key[_\-\s]?[=:]\s*['\"]?sk_(test|live)_[0-9a-zA-Z]{24}['\"]?'''
tags = ["key", "Stripe"]

[[rules]]
id = "pypi-upload-token"
description = "PyPI Upload Token"
regex = '''pypi-AgEIcHlwaS5vcmcC[A-Za-z0-9\-_]+'''
tags = ["key", "PyPI"]

[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)(api[_\-\s]?key|apikey|api[_\-\s]?secret)[_\-\s]?[=:]\s*['\"]?([a-zA-Z0-9\-_]{20,})['\"]?'''
tags = ["key", "generic"]
[rules.allowlist]
regexes = [
  # Allow placeholder patterns
  '''(?i)(example|sample|test|demo|dummy|fake|placeholder|your)''',
  '''(?i)<[A-Z_]+>''',
  '''xxx+''',
  '''None|null|undefined|""''',
]

[[rules]]
id = "generic-secret"
description = "Generic Secret"
regex = '''(?i)(secret|password|passwd|pwd)[_\-\s]?[=:]\s*['\"]?([a-zA-Z0-9\-_!@#$%^&*]{8,})['\"]?'''
tags = ["secret", "generic"]
[rules.allowlist]
regexes = [
  # Allow placeholder patterns
  '''(?i)(example|sample|test|demo|dummy|fake|placeholder|your|changeme)''',
  '''(?i)<[A-Z_]+>''',
  '''xxx+''',
  '''None|null|undefined|""''',
  # Allow default postgres password in Docker Compose files
  '''POSTGRES_PASSWORD=postgres''',
  # Allow variable patterns in shell scripts
  '''export \$secret=''',
]
paths = [
  # Docker Compose files with default postgres
  '''docker-compose.*\.ya?ml''',
  '''compose.*\.ya?ml''',
  # Config generators are creating templates
  '''config_generators\.py''',
  '''config_generation_tasks\.py''',
  '''project_type_detector\.py''',
  '''dhtl_secrets\.sh''',
]

[[rules]]
id = "private-key"
description = "Private Key"
regex = '''-----BEGIN\s+(RSA|DSA|EC|OPENSSH|PGP)\s+PRIVATE\s+KEY-----'''
tags = ["key", "private"]
